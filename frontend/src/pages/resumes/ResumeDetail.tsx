import { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { resumeService } from '../../services/resumeService';
import { ResumeResponse } from '../../types/resume';
import { ApiError } from '../../types/api';
import styles from '../../styles/resume.module.css';
import { BackButton } from '../../components/BackButton';

export const ResumeDetail = () => {
    const { id } = useParams<{ id: string }>();
    const navigate = useNavigate();
    const [resume, setResume] = useState<ResumeResponse | null>(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [improving, setImproving] = useState(false); // ‚Üê –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    useEffect(() => {
        if (id) {
            loadResume();
        }
    }, [id]);

    const loadResume = async () => {
        try {
            setLoading(true);
            const resumeData = await resumeService.getResumeById(Number(id));
            setResume(resumeData);
        } catch (err) {
            const apiError = err as ApiError;
            setError(apiError.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—é–º–µ');
        } finally {
            setLoading(false);
        }
    };

    const handleImprove = async (id: number) => {
        setImproving(true); // ‚Üê –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        try {
            const improvedResume = await resumeService.improveResume(id);
            setResume(improvedResume);
        } catch (err) {
            const apiError = err as ApiError;
            setError(apiError.message || '–û—à–∏–±–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∑—é–º–µ');
        } finally {
            setImproving(false); // ‚Üê –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        }
    };

    const handleDelete = async (id: number) => {
        if (window.confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Ä–µ–∑—é–º–µ?')) {
            try {
                await resumeService.deleteResume(id);
                navigate('/resumes');
            } catch (err) {
                const apiError = err as ApiError;
                setError(apiError.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∑—é–º–µ');
            }
        }
    };

    if (loading) {
        return (
            <div className={styles.page}>
                <div className={styles.container}>
                    <div className={styles.loading}>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—é–º–µ...</div>
                </div>
            </div>
        );
    }

    if (error) {
        return (
            <div className={styles.page}>
                <div className={styles.container}>
                    <div className={styles.error}>{error}</div>
                    <button
                        onClick={() => navigate('/resumes')}
                        className={`${styles.btn} ${styles.btnPrimary}`}
                    >
                        ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
                    </button>
                </div>
            </div>
        );
    }

    if (!resume) {
        return (
            <div className={styles.page}>
                <div className={styles.container}>
                    <h2>–†–µ–∑—é–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h2>
                    <button
                        onClick={() => navigate('/resumes')}
                        className={`${styles.btn} ${styles.btnPrimary}`}
                    >
                        ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
                    </button>
                </div>
            </div>
        );
    }

    return (
        <div className={styles.page}>
            <div className={styles.container}>
                <div className={styles.pageHeader}>
                    <BackButton simple={true} />
                    <h1 className={styles.pageTitle}>{resume.title}</h1>
                    <div className={styles.actionButtons}>
                        <button
                            onClick={() => handleImprove(resume.id)}
                            disabled={improving} // ‚Üê –¢–µ–ø–µ—Ä—å improving —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                            className={`${styles.btn} ${styles.btnWarning}`}
                        >
                            {improving ? '–£–ª—É—á—à–µ–Ω–∏–µ...' : '‚ú® –£–ª—É—á—à–∏—Ç—å'}
                        </button>
                        <button
                            onClick={() => navigate(`/resumes/${resume.id}/edit`)}
                            className={`${styles.btn} ${styles.btnEdit}`}
                        >
                            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                        <button
                            onClick={() => handleDelete(resume.id)}
                            className={`${styles.btn} ${styles.btnDanger}`}
                        >
                            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                        </button>
                    </div>
                </div>

                <div className={styles.resumeContent}>
                    <div className={styles.resumeSection}>
                        <h3 className={styles.sectionTitle}>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                        <div className={styles.resumeField}>
                            <span className={styles.fieldLabel}>–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                            <span className={styles.fieldValue}>{resume.title}</span>
                        </div>
                        <div className={styles.resumeField}>
                            <span className={styles.fieldLabel}>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</span>
                            <div className={styles.contentBox}>
                                {resume.content || '–ù–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è'}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};